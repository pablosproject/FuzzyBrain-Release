# Makefile.in generated by automake 1.12.4 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/fuzzybrain
pkgincludedir = $(includedir)/fuzzybrain
pkglibdir = $(libdir)/fuzzybrain
pkglibexecdir = $(libexecdir)/fuzzybrain
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = $(top_builddir)/bin/FuzzyBrain$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am___top_builddir__bin_FuzzyBrain_OBJECTS = Configurator.$(OBJEXT) \
	CentroidDefuzzificator.$(OBJEXT) COSDefuzzificator.$(OBJEXT) \
	Defuzzificator.$(OBJEXT) EngineCreator.$(OBJEXT) \
	XMLFPCreator.$(OBJEXT) XMLFPParser.$(OBJEXT) \
	FuzzyRule.$(OBJEXT) MamdaniRule.$(OBJEXT) \
	RuleAnalyzer.$(OBJEXT) RulesContainer.$(OBJEXT) \
	FuzzySet.$(OBJEXT) RectangularFuzzySet.$(OBJEXT) \
	SimplePolygonalFuzzySet.$(OBJEXT) SingletonFuzzySet.$(OBJEXT) \
	TrapezoidalFuzzySet.$(OBJEXT) TriangularFuzzySet.$(OBJEXT) \
	FuzzyEngine.$(OBJEXT) InputProvider.$(OBJEXT) \
	InputStreamProvider.$(OBJEXT) ManualInputProvider.$(OBJEXT) \
	getopt_pp.$(OBJEXT) pugixml.$(OBJEXT) \
	InputLinguisticVariable.$(OBJEXT) LinguisticVariable.$(OBJEXT) \
	MamdaniOutputVariable.$(OBJEXT) main.$(OBJEXT) \
	MamdaniFuzzyObject.$(OBJEXT) ZadehianAnd.$(OBJEXT) \
	ZadehianOr.$(OBJEXT) PolygonalShape.$(OBJEXT) \
	RectangularShape.$(OBJEXT) TrapezoidalShape.$(OBJEXT) \
	TriangularShape.$(OBJEXT) Utility.$(OBJEXT)
__top_builddir__bin_FuzzyBrain_OBJECTS =  \
	$(am___top_builddir__bin_FuzzyBrain_OBJECTS)
__top_builddir__bin_FuzzyBrain_LDADD = $(LDADD)
am__dirstamp = $(am__leading_dot)dirstamp
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(__top_builddir__bin_FuzzyBrain_SOURCES)
DIST_SOURCES = $(__top_builddir__bin_FuzzyBrain_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/pablosproject/Desktop/FuzzyBrain/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /Users/pablosproject/Desktop/FuzzyBrain/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/pablosproject/Desktop/FuzzyBrain/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/pablosproject/Desktop/FuzzyBrain/missing --run automake-1.12
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS =  ${LIBOBJDIR}error$U.o
LIBS = 
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo
MAKEINFO = ${SHELL} /Users/pablosproject/Desktop/FuzzyBrain/missing --run makeinfo
MKDIR_P = .././install-sh -c -d
OBJEXT = o
PACKAGE = fuzzybrain
PACKAGE_BUGREPORT = pablosproject@gmail.com
PACKAGE_NAME = FuzzyBrain
PACKAGE_STRING = FuzzyBrain 1.0
PACKAGE_TARNAME = fuzzybrain
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
POW_LIB = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.0
abs_builddir = /Users/pablosproject/Desktop/FuzzyBrain/src
abs_srcdir = /Users/pablosproject/Desktop/FuzzyBrain/src
abs_top_builddir = /Users/pablosproject/Desktop/FuzzyBrain
abs_top_srcdir = /Users/pablosproject/Desktop/FuzzyBrain
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/pablosproject/Desktop/FuzzyBrain/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CXXFLAGS = -w 
__top_builddir__bin_FuzzyBrain_SOURCES = Configurator.cpp\
Configurator.h\
defuzzificators/CentroidDefuzzificator.cpp\
defuzzificators/CentroidDefuzzificator.h\
defuzzificators/COSDefuzzificator.cpp\
defuzzificators/COSDefuzzificator.h\
defuzzificators/Defuzzificator.cpp\
defuzzificators/Defuzzificator.h\
engine_creator/EngineCreator.cpp\
engine_creator/EngineCreator.h\
engine_creator/XMLFPCreator.cpp\
engine_creator/XMLFPCreator.h\
engine_creator/XMLFPParser.cpp\
engine_creator/XMLFPParser.h\
ErrorDefinition.h\
fuzzy_rules/FuzzyRule.cpp\
fuzzy_rules/FuzzyRule.h\
fuzzy_rules/MamdaniRule.cpp\
fuzzy_rules/MamdaniRule.h\
fuzzy_rules/RuleAnalyzer.cpp\
fuzzy_rules/RuleAnalyzer.h\
fuzzy_rules/RulesContainer.cpp\
fuzzy_rules/RulesContainer.h\
fuzzy_sets/FuzzySet.cpp\
fuzzy_sets/FuzzySet.h\
fuzzy_sets/RectangularFuzzySet.cpp\
fuzzy_sets/RectangularFuzzySet.h\
fuzzy_sets/SimplePolygonalFuzzySet.cpp\
fuzzy_sets/SimplePolygonalFuzzySet.h\
fuzzy_sets/SingletonFuzzySet.cpp\
fuzzy_sets/SingletonFuzzySet.h\
fuzzy_sets/TrapezoidalFuzzySet.cpp\
fuzzy_sets/TrapezoidalFuzzySet.h\
fuzzy_sets/TriangularFuzzySet.cpp\
fuzzy_sets/TriangularFuzzySet.h\
FuzzyEngine.cpp\
FuzzyEngine.h\
FuzzyObject.h\
input_providers/InputProvider.cpp\
input_providers/InputProvider.h\
input_providers/InputStreamProvider.cpp\
input_providers/InputStreamProvider.h\
input_providers/ManualInputProvider.cpp\
input_providers/ManualInputProvider.h\
lib/easylogging++.h\
lib/getopt/getopt_pp.cpp\
lib/getopt_pp.h\
lib/pugiconfig.hpp\
lib/pugixml.cpp\
lib/pugixml.hpp\
linguistic_variables/InputLinguisticVariable.cpp\
linguistic_variables/InputLinguisticVariable.h\
linguistic_variables/LinguisticVariable.cpp\
linguistic_variables/LinguisticVariable.h\
linguistic_variables/MamdaniOutputVariable.cpp\
linguistic_variables/MamdaniOutputVariable.h\
main.cpp\
MamdaniFuzzyObject.cpp\
MamdaniFuzzyObject.h\
MappedPointersContainer.hpp\
operator/AndOperator.h\
operator/OrOperator.h\
operator/ZadehianAnd.cpp\
operator/ZadehianAnd.h\
operator/ZadehianOr.cpp\
operator/ZadehianOr.h\
shape/PolygonalShape.cpp\
shape/PolygonalShape.h\
shape/RectangularShape.cpp\
shape/RectangularShape.h\
shape/TrapezoidalShape.cpp\
shape/TrapezoidalShape.h\
shape/TriangularShape.cpp\
shape/TriangularShape.h\
Utility.cpp\
Utility.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
$(top_builddir)/bin/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/bin
	@: > $(top_builddir)/bin/$(am__dirstamp)
$(top_builddir)/bin/FuzzyBrain$(EXEEXT): $(__top_builddir__bin_FuzzyBrain_OBJECTS) $(__top_builddir__bin_FuzzyBrain_DEPENDENCIES) $(EXTRA___top_builddir__bin_FuzzyBrain_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	@rm -f $(top_builddir)/bin/FuzzyBrain$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(__top_builddir__bin_FuzzyBrain_OBJECTS) $(__top_builddir__bin_FuzzyBrain_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/COSDefuzzificator.Po
include ./$(DEPDIR)/CentroidDefuzzificator.Po
include ./$(DEPDIR)/Configurator.Po
include ./$(DEPDIR)/Defuzzificator.Po
include ./$(DEPDIR)/EngineCreator.Po
include ./$(DEPDIR)/FuzzyEngine.Po
include ./$(DEPDIR)/FuzzyRule.Po
include ./$(DEPDIR)/FuzzySet.Po
include ./$(DEPDIR)/InputLinguisticVariable.Po
include ./$(DEPDIR)/InputProvider.Po
include ./$(DEPDIR)/InputStreamProvider.Po
include ./$(DEPDIR)/LinguisticVariable.Po
include ./$(DEPDIR)/MamdaniFuzzyObject.Po
include ./$(DEPDIR)/MamdaniOutputVariable.Po
include ./$(DEPDIR)/MamdaniRule.Po
include ./$(DEPDIR)/ManualInputProvider.Po
include ./$(DEPDIR)/PolygonalShape.Po
include ./$(DEPDIR)/RectangularFuzzySet.Po
include ./$(DEPDIR)/RectangularShape.Po
include ./$(DEPDIR)/RuleAnalyzer.Po
include ./$(DEPDIR)/RulesContainer.Po
include ./$(DEPDIR)/SimplePolygonalFuzzySet.Po
include ./$(DEPDIR)/SingletonFuzzySet.Po
include ./$(DEPDIR)/TrapezoidalFuzzySet.Po
include ./$(DEPDIR)/TrapezoidalShape.Po
include ./$(DEPDIR)/TriangularFuzzySet.Po
include ./$(DEPDIR)/TriangularShape.Po
include ./$(DEPDIR)/Utility.Po
include ./$(DEPDIR)/XMLFPCreator.Po
include ./$(DEPDIR)/XMLFPParser.Po
include ./$(DEPDIR)/ZadehianAnd.Po
include ./$(DEPDIR)/ZadehianOr.Po
include ./$(DEPDIR)/getopt_pp.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/pugixml.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

CentroidDefuzzificator.o: defuzzificators/CentroidDefuzzificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CentroidDefuzzificator.o -MD -MP -MF $(DEPDIR)/CentroidDefuzzificator.Tpo -c -o CentroidDefuzzificator.o `test -f 'defuzzificators/CentroidDefuzzificator.cpp' || echo '$(srcdir)/'`defuzzificators/CentroidDefuzzificator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CentroidDefuzzificator.Tpo $(DEPDIR)/CentroidDefuzzificator.Po
#	$(AM_V_CXX)source='defuzzificators/CentroidDefuzzificator.cpp' object='CentroidDefuzzificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CentroidDefuzzificator.o `test -f 'defuzzificators/CentroidDefuzzificator.cpp' || echo '$(srcdir)/'`defuzzificators/CentroidDefuzzificator.cpp

CentroidDefuzzificator.obj: defuzzificators/CentroidDefuzzificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CentroidDefuzzificator.obj -MD -MP -MF $(DEPDIR)/CentroidDefuzzificator.Tpo -c -o CentroidDefuzzificator.obj `if test -f 'defuzzificators/CentroidDefuzzificator.cpp'; then $(CYGPATH_W) 'defuzzificators/CentroidDefuzzificator.cpp'; else $(CYGPATH_W) '$(srcdir)/defuzzificators/CentroidDefuzzificator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/CentroidDefuzzificator.Tpo $(DEPDIR)/CentroidDefuzzificator.Po
#	$(AM_V_CXX)source='defuzzificators/CentroidDefuzzificator.cpp' object='CentroidDefuzzificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CentroidDefuzzificator.obj `if test -f 'defuzzificators/CentroidDefuzzificator.cpp'; then $(CYGPATH_W) 'defuzzificators/CentroidDefuzzificator.cpp'; else $(CYGPATH_W) '$(srcdir)/defuzzificators/CentroidDefuzzificator.cpp'; fi`

COSDefuzzificator.o: defuzzificators/COSDefuzzificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT COSDefuzzificator.o -MD -MP -MF $(DEPDIR)/COSDefuzzificator.Tpo -c -o COSDefuzzificator.o `test -f 'defuzzificators/COSDefuzzificator.cpp' || echo '$(srcdir)/'`defuzzificators/COSDefuzzificator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/COSDefuzzificator.Tpo $(DEPDIR)/COSDefuzzificator.Po
#	$(AM_V_CXX)source='defuzzificators/COSDefuzzificator.cpp' object='COSDefuzzificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o COSDefuzzificator.o `test -f 'defuzzificators/COSDefuzzificator.cpp' || echo '$(srcdir)/'`defuzzificators/COSDefuzzificator.cpp

COSDefuzzificator.obj: defuzzificators/COSDefuzzificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT COSDefuzzificator.obj -MD -MP -MF $(DEPDIR)/COSDefuzzificator.Tpo -c -o COSDefuzzificator.obj `if test -f 'defuzzificators/COSDefuzzificator.cpp'; then $(CYGPATH_W) 'defuzzificators/COSDefuzzificator.cpp'; else $(CYGPATH_W) '$(srcdir)/defuzzificators/COSDefuzzificator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/COSDefuzzificator.Tpo $(DEPDIR)/COSDefuzzificator.Po
#	$(AM_V_CXX)source='defuzzificators/COSDefuzzificator.cpp' object='COSDefuzzificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o COSDefuzzificator.obj `if test -f 'defuzzificators/COSDefuzzificator.cpp'; then $(CYGPATH_W) 'defuzzificators/COSDefuzzificator.cpp'; else $(CYGPATH_W) '$(srcdir)/defuzzificators/COSDefuzzificator.cpp'; fi`

Defuzzificator.o: defuzzificators/Defuzzificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Defuzzificator.o -MD -MP -MF $(DEPDIR)/Defuzzificator.Tpo -c -o Defuzzificator.o `test -f 'defuzzificators/Defuzzificator.cpp' || echo '$(srcdir)/'`defuzzificators/Defuzzificator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Defuzzificator.Tpo $(DEPDIR)/Defuzzificator.Po
#	$(AM_V_CXX)source='defuzzificators/Defuzzificator.cpp' object='Defuzzificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Defuzzificator.o `test -f 'defuzzificators/Defuzzificator.cpp' || echo '$(srcdir)/'`defuzzificators/Defuzzificator.cpp

Defuzzificator.obj: defuzzificators/Defuzzificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Defuzzificator.obj -MD -MP -MF $(DEPDIR)/Defuzzificator.Tpo -c -o Defuzzificator.obj `if test -f 'defuzzificators/Defuzzificator.cpp'; then $(CYGPATH_W) 'defuzzificators/Defuzzificator.cpp'; else $(CYGPATH_W) '$(srcdir)/defuzzificators/Defuzzificator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/Defuzzificator.Tpo $(DEPDIR)/Defuzzificator.Po
#	$(AM_V_CXX)source='defuzzificators/Defuzzificator.cpp' object='Defuzzificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Defuzzificator.obj `if test -f 'defuzzificators/Defuzzificator.cpp'; then $(CYGPATH_W) 'defuzzificators/Defuzzificator.cpp'; else $(CYGPATH_W) '$(srcdir)/defuzzificators/Defuzzificator.cpp'; fi`

EngineCreator.o: engine_creator/EngineCreator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EngineCreator.o -MD -MP -MF $(DEPDIR)/EngineCreator.Tpo -c -o EngineCreator.o `test -f 'engine_creator/EngineCreator.cpp' || echo '$(srcdir)/'`engine_creator/EngineCreator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EngineCreator.Tpo $(DEPDIR)/EngineCreator.Po
#	$(AM_V_CXX)source='engine_creator/EngineCreator.cpp' object='EngineCreator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EngineCreator.o `test -f 'engine_creator/EngineCreator.cpp' || echo '$(srcdir)/'`engine_creator/EngineCreator.cpp

EngineCreator.obj: engine_creator/EngineCreator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EngineCreator.obj -MD -MP -MF $(DEPDIR)/EngineCreator.Tpo -c -o EngineCreator.obj `if test -f 'engine_creator/EngineCreator.cpp'; then $(CYGPATH_W) 'engine_creator/EngineCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_creator/EngineCreator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/EngineCreator.Tpo $(DEPDIR)/EngineCreator.Po
#	$(AM_V_CXX)source='engine_creator/EngineCreator.cpp' object='EngineCreator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EngineCreator.obj `if test -f 'engine_creator/EngineCreator.cpp'; then $(CYGPATH_W) 'engine_creator/EngineCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_creator/EngineCreator.cpp'; fi`

XMLFPCreator.o: engine_creator/XMLFPCreator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XMLFPCreator.o -MD -MP -MF $(DEPDIR)/XMLFPCreator.Tpo -c -o XMLFPCreator.o `test -f 'engine_creator/XMLFPCreator.cpp' || echo '$(srcdir)/'`engine_creator/XMLFPCreator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/XMLFPCreator.Tpo $(DEPDIR)/XMLFPCreator.Po
#	$(AM_V_CXX)source='engine_creator/XMLFPCreator.cpp' object='XMLFPCreator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLFPCreator.o `test -f 'engine_creator/XMLFPCreator.cpp' || echo '$(srcdir)/'`engine_creator/XMLFPCreator.cpp

XMLFPCreator.obj: engine_creator/XMLFPCreator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XMLFPCreator.obj -MD -MP -MF $(DEPDIR)/XMLFPCreator.Tpo -c -o XMLFPCreator.obj `if test -f 'engine_creator/XMLFPCreator.cpp'; then $(CYGPATH_W) 'engine_creator/XMLFPCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_creator/XMLFPCreator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/XMLFPCreator.Tpo $(DEPDIR)/XMLFPCreator.Po
#	$(AM_V_CXX)source='engine_creator/XMLFPCreator.cpp' object='XMLFPCreator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLFPCreator.obj `if test -f 'engine_creator/XMLFPCreator.cpp'; then $(CYGPATH_W) 'engine_creator/XMLFPCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_creator/XMLFPCreator.cpp'; fi`

XMLFPParser.o: engine_creator/XMLFPParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XMLFPParser.o -MD -MP -MF $(DEPDIR)/XMLFPParser.Tpo -c -o XMLFPParser.o `test -f 'engine_creator/XMLFPParser.cpp' || echo '$(srcdir)/'`engine_creator/XMLFPParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/XMLFPParser.Tpo $(DEPDIR)/XMLFPParser.Po
#	$(AM_V_CXX)source='engine_creator/XMLFPParser.cpp' object='XMLFPParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLFPParser.o `test -f 'engine_creator/XMLFPParser.cpp' || echo '$(srcdir)/'`engine_creator/XMLFPParser.cpp

XMLFPParser.obj: engine_creator/XMLFPParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XMLFPParser.obj -MD -MP -MF $(DEPDIR)/XMLFPParser.Tpo -c -o XMLFPParser.obj `if test -f 'engine_creator/XMLFPParser.cpp'; then $(CYGPATH_W) 'engine_creator/XMLFPParser.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_creator/XMLFPParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/XMLFPParser.Tpo $(DEPDIR)/XMLFPParser.Po
#	$(AM_V_CXX)source='engine_creator/XMLFPParser.cpp' object='XMLFPParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLFPParser.obj `if test -f 'engine_creator/XMLFPParser.cpp'; then $(CYGPATH_W) 'engine_creator/XMLFPParser.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_creator/XMLFPParser.cpp'; fi`

FuzzyRule.o: fuzzy_rules/FuzzyRule.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FuzzyRule.o -MD -MP -MF $(DEPDIR)/FuzzyRule.Tpo -c -o FuzzyRule.o `test -f 'fuzzy_rules/FuzzyRule.cpp' || echo '$(srcdir)/'`fuzzy_rules/FuzzyRule.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/FuzzyRule.Tpo $(DEPDIR)/FuzzyRule.Po
#	$(AM_V_CXX)source='fuzzy_rules/FuzzyRule.cpp' object='FuzzyRule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyRule.o `test -f 'fuzzy_rules/FuzzyRule.cpp' || echo '$(srcdir)/'`fuzzy_rules/FuzzyRule.cpp

FuzzyRule.obj: fuzzy_rules/FuzzyRule.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FuzzyRule.obj -MD -MP -MF $(DEPDIR)/FuzzyRule.Tpo -c -o FuzzyRule.obj `if test -f 'fuzzy_rules/FuzzyRule.cpp'; then $(CYGPATH_W) 'fuzzy_rules/FuzzyRule.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/FuzzyRule.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FuzzyRule.Tpo $(DEPDIR)/FuzzyRule.Po
#	$(AM_V_CXX)source='fuzzy_rules/FuzzyRule.cpp' object='FuzzyRule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyRule.obj `if test -f 'fuzzy_rules/FuzzyRule.cpp'; then $(CYGPATH_W) 'fuzzy_rules/FuzzyRule.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/FuzzyRule.cpp'; fi`

MamdaniRule.o: fuzzy_rules/MamdaniRule.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MamdaniRule.o -MD -MP -MF $(DEPDIR)/MamdaniRule.Tpo -c -o MamdaniRule.o `test -f 'fuzzy_rules/MamdaniRule.cpp' || echo '$(srcdir)/'`fuzzy_rules/MamdaniRule.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MamdaniRule.Tpo $(DEPDIR)/MamdaniRule.Po
#	$(AM_V_CXX)source='fuzzy_rules/MamdaniRule.cpp' object='MamdaniRule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MamdaniRule.o `test -f 'fuzzy_rules/MamdaniRule.cpp' || echo '$(srcdir)/'`fuzzy_rules/MamdaniRule.cpp

MamdaniRule.obj: fuzzy_rules/MamdaniRule.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MamdaniRule.obj -MD -MP -MF $(DEPDIR)/MamdaniRule.Tpo -c -o MamdaniRule.obj `if test -f 'fuzzy_rules/MamdaniRule.cpp'; then $(CYGPATH_W) 'fuzzy_rules/MamdaniRule.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/MamdaniRule.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MamdaniRule.Tpo $(DEPDIR)/MamdaniRule.Po
#	$(AM_V_CXX)source='fuzzy_rules/MamdaniRule.cpp' object='MamdaniRule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MamdaniRule.obj `if test -f 'fuzzy_rules/MamdaniRule.cpp'; then $(CYGPATH_W) 'fuzzy_rules/MamdaniRule.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/MamdaniRule.cpp'; fi`

RuleAnalyzer.o: fuzzy_rules/RuleAnalyzer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleAnalyzer.o -MD -MP -MF $(DEPDIR)/RuleAnalyzer.Tpo -c -o RuleAnalyzer.o `test -f 'fuzzy_rules/RuleAnalyzer.cpp' || echo '$(srcdir)/'`fuzzy_rules/RuleAnalyzer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RuleAnalyzer.Tpo $(DEPDIR)/RuleAnalyzer.Po
#	$(AM_V_CXX)source='fuzzy_rules/RuleAnalyzer.cpp' object='RuleAnalyzer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleAnalyzer.o `test -f 'fuzzy_rules/RuleAnalyzer.cpp' || echo '$(srcdir)/'`fuzzy_rules/RuleAnalyzer.cpp

RuleAnalyzer.obj: fuzzy_rules/RuleAnalyzer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleAnalyzer.obj -MD -MP -MF $(DEPDIR)/RuleAnalyzer.Tpo -c -o RuleAnalyzer.obj `if test -f 'fuzzy_rules/RuleAnalyzer.cpp'; then $(CYGPATH_W) 'fuzzy_rules/RuleAnalyzer.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/RuleAnalyzer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/RuleAnalyzer.Tpo $(DEPDIR)/RuleAnalyzer.Po
#	$(AM_V_CXX)source='fuzzy_rules/RuleAnalyzer.cpp' object='RuleAnalyzer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleAnalyzer.obj `if test -f 'fuzzy_rules/RuleAnalyzer.cpp'; then $(CYGPATH_W) 'fuzzy_rules/RuleAnalyzer.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/RuleAnalyzer.cpp'; fi`

RulesContainer.o: fuzzy_rules/RulesContainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RulesContainer.o -MD -MP -MF $(DEPDIR)/RulesContainer.Tpo -c -o RulesContainer.o `test -f 'fuzzy_rules/RulesContainer.cpp' || echo '$(srcdir)/'`fuzzy_rules/RulesContainer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RulesContainer.Tpo $(DEPDIR)/RulesContainer.Po
#	$(AM_V_CXX)source='fuzzy_rules/RulesContainer.cpp' object='RulesContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RulesContainer.o `test -f 'fuzzy_rules/RulesContainer.cpp' || echo '$(srcdir)/'`fuzzy_rules/RulesContainer.cpp

RulesContainer.obj: fuzzy_rules/RulesContainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RulesContainer.obj -MD -MP -MF $(DEPDIR)/RulesContainer.Tpo -c -o RulesContainer.obj `if test -f 'fuzzy_rules/RulesContainer.cpp'; then $(CYGPATH_W) 'fuzzy_rules/RulesContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/RulesContainer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/RulesContainer.Tpo $(DEPDIR)/RulesContainer.Po
#	$(AM_V_CXX)source='fuzzy_rules/RulesContainer.cpp' object='RulesContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RulesContainer.obj `if test -f 'fuzzy_rules/RulesContainer.cpp'; then $(CYGPATH_W) 'fuzzy_rules/RulesContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_rules/RulesContainer.cpp'; fi`

FuzzySet.o: fuzzy_sets/FuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FuzzySet.o -MD -MP -MF $(DEPDIR)/FuzzySet.Tpo -c -o FuzzySet.o `test -f 'fuzzy_sets/FuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/FuzzySet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/FuzzySet.Tpo $(DEPDIR)/FuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/FuzzySet.cpp' object='FuzzySet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzySet.o `test -f 'fuzzy_sets/FuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/FuzzySet.cpp

FuzzySet.obj: fuzzy_sets/FuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FuzzySet.obj -MD -MP -MF $(DEPDIR)/FuzzySet.Tpo -c -o FuzzySet.obj `if test -f 'fuzzy_sets/FuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/FuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/FuzzySet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FuzzySet.Tpo $(DEPDIR)/FuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/FuzzySet.cpp' object='FuzzySet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzySet.obj `if test -f 'fuzzy_sets/FuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/FuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/FuzzySet.cpp'; fi`

RectangularFuzzySet.o: fuzzy_sets/RectangularFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RectangularFuzzySet.o -MD -MP -MF $(DEPDIR)/RectangularFuzzySet.Tpo -c -o RectangularFuzzySet.o `test -f 'fuzzy_sets/RectangularFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/RectangularFuzzySet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RectangularFuzzySet.Tpo $(DEPDIR)/RectangularFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/RectangularFuzzySet.cpp' object='RectangularFuzzySet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RectangularFuzzySet.o `test -f 'fuzzy_sets/RectangularFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/RectangularFuzzySet.cpp

RectangularFuzzySet.obj: fuzzy_sets/RectangularFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RectangularFuzzySet.obj -MD -MP -MF $(DEPDIR)/RectangularFuzzySet.Tpo -c -o RectangularFuzzySet.obj `if test -f 'fuzzy_sets/RectangularFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/RectangularFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/RectangularFuzzySet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/RectangularFuzzySet.Tpo $(DEPDIR)/RectangularFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/RectangularFuzzySet.cpp' object='RectangularFuzzySet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RectangularFuzzySet.obj `if test -f 'fuzzy_sets/RectangularFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/RectangularFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/RectangularFuzzySet.cpp'; fi`

SimplePolygonalFuzzySet.o: fuzzy_sets/SimplePolygonalFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimplePolygonalFuzzySet.o -MD -MP -MF $(DEPDIR)/SimplePolygonalFuzzySet.Tpo -c -o SimplePolygonalFuzzySet.o `test -f 'fuzzy_sets/SimplePolygonalFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/SimplePolygonalFuzzySet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SimplePolygonalFuzzySet.Tpo $(DEPDIR)/SimplePolygonalFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/SimplePolygonalFuzzySet.cpp' object='SimplePolygonalFuzzySet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimplePolygonalFuzzySet.o `test -f 'fuzzy_sets/SimplePolygonalFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/SimplePolygonalFuzzySet.cpp

SimplePolygonalFuzzySet.obj: fuzzy_sets/SimplePolygonalFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimplePolygonalFuzzySet.obj -MD -MP -MF $(DEPDIR)/SimplePolygonalFuzzySet.Tpo -c -o SimplePolygonalFuzzySet.obj `if test -f 'fuzzy_sets/SimplePolygonalFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/SimplePolygonalFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/SimplePolygonalFuzzySet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/SimplePolygonalFuzzySet.Tpo $(DEPDIR)/SimplePolygonalFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/SimplePolygonalFuzzySet.cpp' object='SimplePolygonalFuzzySet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimplePolygonalFuzzySet.obj `if test -f 'fuzzy_sets/SimplePolygonalFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/SimplePolygonalFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/SimplePolygonalFuzzySet.cpp'; fi`

SingletonFuzzySet.o: fuzzy_sets/SingletonFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SingletonFuzzySet.o -MD -MP -MF $(DEPDIR)/SingletonFuzzySet.Tpo -c -o SingletonFuzzySet.o `test -f 'fuzzy_sets/SingletonFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/SingletonFuzzySet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SingletonFuzzySet.Tpo $(DEPDIR)/SingletonFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/SingletonFuzzySet.cpp' object='SingletonFuzzySet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SingletonFuzzySet.o `test -f 'fuzzy_sets/SingletonFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/SingletonFuzzySet.cpp

SingletonFuzzySet.obj: fuzzy_sets/SingletonFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SingletonFuzzySet.obj -MD -MP -MF $(DEPDIR)/SingletonFuzzySet.Tpo -c -o SingletonFuzzySet.obj `if test -f 'fuzzy_sets/SingletonFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/SingletonFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/SingletonFuzzySet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/SingletonFuzzySet.Tpo $(DEPDIR)/SingletonFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/SingletonFuzzySet.cpp' object='SingletonFuzzySet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SingletonFuzzySet.obj `if test -f 'fuzzy_sets/SingletonFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/SingletonFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/SingletonFuzzySet.cpp'; fi`

TrapezoidalFuzzySet.o: fuzzy_sets/TrapezoidalFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TrapezoidalFuzzySet.o -MD -MP -MF $(DEPDIR)/TrapezoidalFuzzySet.Tpo -c -o TrapezoidalFuzzySet.o `test -f 'fuzzy_sets/TrapezoidalFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/TrapezoidalFuzzySet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TrapezoidalFuzzySet.Tpo $(DEPDIR)/TrapezoidalFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/TrapezoidalFuzzySet.cpp' object='TrapezoidalFuzzySet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrapezoidalFuzzySet.o `test -f 'fuzzy_sets/TrapezoidalFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/TrapezoidalFuzzySet.cpp

TrapezoidalFuzzySet.obj: fuzzy_sets/TrapezoidalFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TrapezoidalFuzzySet.obj -MD -MP -MF $(DEPDIR)/TrapezoidalFuzzySet.Tpo -c -o TrapezoidalFuzzySet.obj `if test -f 'fuzzy_sets/TrapezoidalFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/TrapezoidalFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/TrapezoidalFuzzySet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TrapezoidalFuzzySet.Tpo $(DEPDIR)/TrapezoidalFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/TrapezoidalFuzzySet.cpp' object='TrapezoidalFuzzySet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrapezoidalFuzzySet.obj `if test -f 'fuzzy_sets/TrapezoidalFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/TrapezoidalFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/TrapezoidalFuzzySet.cpp'; fi`

TriangularFuzzySet.o: fuzzy_sets/TriangularFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TriangularFuzzySet.o -MD -MP -MF $(DEPDIR)/TriangularFuzzySet.Tpo -c -o TriangularFuzzySet.o `test -f 'fuzzy_sets/TriangularFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/TriangularFuzzySet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TriangularFuzzySet.Tpo $(DEPDIR)/TriangularFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/TriangularFuzzySet.cpp' object='TriangularFuzzySet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TriangularFuzzySet.o `test -f 'fuzzy_sets/TriangularFuzzySet.cpp' || echo '$(srcdir)/'`fuzzy_sets/TriangularFuzzySet.cpp

TriangularFuzzySet.obj: fuzzy_sets/TriangularFuzzySet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TriangularFuzzySet.obj -MD -MP -MF $(DEPDIR)/TriangularFuzzySet.Tpo -c -o TriangularFuzzySet.obj `if test -f 'fuzzy_sets/TriangularFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/TriangularFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/TriangularFuzzySet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TriangularFuzzySet.Tpo $(DEPDIR)/TriangularFuzzySet.Po
#	$(AM_V_CXX)source='fuzzy_sets/TriangularFuzzySet.cpp' object='TriangularFuzzySet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TriangularFuzzySet.obj `if test -f 'fuzzy_sets/TriangularFuzzySet.cpp'; then $(CYGPATH_W) 'fuzzy_sets/TriangularFuzzySet.cpp'; else $(CYGPATH_W) '$(srcdir)/fuzzy_sets/TriangularFuzzySet.cpp'; fi`

InputProvider.o: input_providers/InputProvider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputProvider.o -MD -MP -MF $(DEPDIR)/InputProvider.Tpo -c -o InputProvider.o `test -f 'input_providers/InputProvider.cpp' || echo '$(srcdir)/'`input_providers/InputProvider.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputProvider.Tpo $(DEPDIR)/InputProvider.Po
#	$(AM_V_CXX)source='input_providers/InputProvider.cpp' object='InputProvider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputProvider.o `test -f 'input_providers/InputProvider.cpp' || echo '$(srcdir)/'`input_providers/InputProvider.cpp

InputProvider.obj: input_providers/InputProvider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputProvider.obj -MD -MP -MF $(DEPDIR)/InputProvider.Tpo -c -o InputProvider.obj `if test -f 'input_providers/InputProvider.cpp'; then $(CYGPATH_W) 'input_providers/InputProvider.cpp'; else $(CYGPATH_W) '$(srcdir)/input_providers/InputProvider.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputProvider.Tpo $(DEPDIR)/InputProvider.Po
#	$(AM_V_CXX)source='input_providers/InputProvider.cpp' object='InputProvider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputProvider.obj `if test -f 'input_providers/InputProvider.cpp'; then $(CYGPATH_W) 'input_providers/InputProvider.cpp'; else $(CYGPATH_W) '$(srcdir)/input_providers/InputProvider.cpp'; fi`

InputStreamProvider.o: input_providers/InputStreamProvider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputStreamProvider.o -MD -MP -MF $(DEPDIR)/InputStreamProvider.Tpo -c -o InputStreamProvider.o `test -f 'input_providers/InputStreamProvider.cpp' || echo '$(srcdir)/'`input_providers/InputStreamProvider.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputStreamProvider.Tpo $(DEPDIR)/InputStreamProvider.Po
#	$(AM_V_CXX)source='input_providers/InputStreamProvider.cpp' object='InputStreamProvider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputStreamProvider.o `test -f 'input_providers/InputStreamProvider.cpp' || echo '$(srcdir)/'`input_providers/InputStreamProvider.cpp

InputStreamProvider.obj: input_providers/InputStreamProvider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputStreamProvider.obj -MD -MP -MF $(DEPDIR)/InputStreamProvider.Tpo -c -o InputStreamProvider.obj `if test -f 'input_providers/InputStreamProvider.cpp'; then $(CYGPATH_W) 'input_providers/InputStreamProvider.cpp'; else $(CYGPATH_W) '$(srcdir)/input_providers/InputStreamProvider.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputStreamProvider.Tpo $(DEPDIR)/InputStreamProvider.Po
#	$(AM_V_CXX)source='input_providers/InputStreamProvider.cpp' object='InputStreamProvider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputStreamProvider.obj `if test -f 'input_providers/InputStreamProvider.cpp'; then $(CYGPATH_W) 'input_providers/InputStreamProvider.cpp'; else $(CYGPATH_W) '$(srcdir)/input_providers/InputStreamProvider.cpp'; fi`

ManualInputProvider.o: input_providers/ManualInputProvider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ManualInputProvider.o -MD -MP -MF $(DEPDIR)/ManualInputProvider.Tpo -c -o ManualInputProvider.o `test -f 'input_providers/ManualInputProvider.cpp' || echo '$(srcdir)/'`input_providers/ManualInputProvider.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManualInputProvider.Tpo $(DEPDIR)/ManualInputProvider.Po
#	$(AM_V_CXX)source='input_providers/ManualInputProvider.cpp' object='ManualInputProvider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ManualInputProvider.o `test -f 'input_providers/ManualInputProvider.cpp' || echo '$(srcdir)/'`input_providers/ManualInputProvider.cpp

ManualInputProvider.obj: input_providers/ManualInputProvider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ManualInputProvider.obj -MD -MP -MF $(DEPDIR)/ManualInputProvider.Tpo -c -o ManualInputProvider.obj `if test -f 'input_providers/ManualInputProvider.cpp'; then $(CYGPATH_W) 'input_providers/ManualInputProvider.cpp'; else $(CYGPATH_W) '$(srcdir)/input_providers/ManualInputProvider.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManualInputProvider.Tpo $(DEPDIR)/ManualInputProvider.Po
#	$(AM_V_CXX)source='input_providers/ManualInputProvider.cpp' object='ManualInputProvider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ManualInputProvider.obj `if test -f 'input_providers/ManualInputProvider.cpp'; then $(CYGPATH_W) 'input_providers/ManualInputProvider.cpp'; else $(CYGPATH_W) '$(srcdir)/input_providers/ManualInputProvider.cpp'; fi`

getopt_pp.o: lib/getopt/getopt_pp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT getopt_pp.o -MD -MP -MF $(DEPDIR)/getopt_pp.Tpo -c -o getopt_pp.o `test -f 'lib/getopt/getopt_pp.cpp' || echo '$(srcdir)/'`lib/getopt/getopt_pp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/getopt_pp.Tpo $(DEPDIR)/getopt_pp.Po
#	$(AM_V_CXX)source='lib/getopt/getopt_pp.cpp' object='getopt_pp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o getopt_pp.o `test -f 'lib/getopt/getopt_pp.cpp' || echo '$(srcdir)/'`lib/getopt/getopt_pp.cpp

getopt_pp.obj: lib/getopt/getopt_pp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT getopt_pp.obj -MD -MP -MF $(DEPDIR)/getopt_pp.Tpo -c -o getopt_pp.obj `if test -f 'lib/getopt/getopt_pp.cpp'; then $(CYGPATH_W) 'lib/getopt/getopt_pp.cpp'; else $(CYGPATH_W) '$(srcdir)/lib/getopt/getopt_pp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/getopt_pp.Tpo $(DEPDIR)/getopt_pp.Po
#	$(AM_V_CXX)source='lib/getopt/getopt_pp.cpp' object='getopt_pp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o getopt_pp.obj `if test -f 'lib/getopt/getopt_pp.cpp'; then $(CYGPATH_W) 'lib/getopt/getopt_pp.cpp'; else $(CYGPATH_W) '$(srcdir)/lib/getopt/getopt_pp.cpp'; fi`

pugixml.o: lib/pugixml.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugixml.o -MD -MP -MF $(DEPDIR)/pugixml.Tpo -c -o pugixml.o `test -f 'lib/pugixml.cpp' || echo '$(srcdir)/'`lib/pugixml.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pugixml.Tpo $(DEPDIR)/pugixml.Po
#	$(AM_V_CXX)source='lib/pugixml.cpp' object='pugixml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugixml.o `test -f 'lib/pugixml.cpp' || echo '$(srcdir)/'`lib/pugixml.cpp

pugixml.obj: lib/pugixml.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugixml.obj -MD -MP -MF $(DEPDIR)/pugixml.Tpo -c -o pugixml.obj `if test -f 'lib/pugixml.cpp'; then $(CYGPATH_W) 'lib/pugixml.cpp'; else $(CYGPATH_W) '$(srcdir)/lib/pugixml.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pugixml.Tpo $(DEPDIR)/pugixml.Po
#	$(AM_V_CXX)source='lib/pugixml.cpp' object='pugixml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugixml.obj `if test -f 'lib/pugixml.cpp'; then $(CYGPATH_W) 'lib/pugixml.cpp'; else $(CYGPATH_W) '$(srcdir)/lib/pugixml.cpp'; fi`

InputLinguisticVariable.o: linguistic_variables/InputLinguisticVariable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputLinguisticVariable.o -MD -MP -MF $(DEPDIR)/InputLinguisticVariable.Tpo -c -o InputLinguisticVariable.o `test -f 'linguistic_variables/InputLinguisticVariable.cpp' || echo '$(srcdir)/'`linguistic_variables/InputLinguisticVariable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputLinguisticVariable.Tpo $(DEPDIR)/InputLinguisticVariable.Po
#	$(AM_V_CXX)source='linguistic_variables/InputLinguisticVariable.cpp' object='InputLinguisticVariable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputLinguisticVariable.o `test -f 'linguistic_variables/InputLinguisticVariable.cpp' || echo '$(srcdir)/'`linguistic_variables/InputLinguisticVariable.cpp

InputLinguisticVariable.obj: linguistic_variables/InputLinguisticVariable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputLinguisticVariable.obj -MD -MP -MF $(DEPDIR)/InputLinguisticVariable.Tpo -c -o InputLinguisticVariable.obj `if test -f 'linguistic_variables/InputLinguisticVariable.cpp'; then $(CYGPATH_W) 'linguistic_variables/InputLinguisticVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/linguistic_variables/InputLinguisticVariable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputLinguisticVariable.Tpo $(DEPDIR)/InputLinguisticVariable.Po
#	$(AM_V_CXX)source='linguistic_variables/InputLinguisticVariable.cpp' object='InputLinguisticVariable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputLinguisticVariable.obj `if test -f 'linguistic_variables/InputLinguisticVariable.cpp'; then $(CYGPATH_W) 'linguistic_variables/InputLinguisticVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/linguistic_variables/InputLinguisticVariable.cpp'; fi`

LinguisticVariable.o: linguistic_variables/LinguisticVariable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinguisticVariable.o -MD -MP -MF $(DEPDIR)/LinguisticVariable.Tpo -c -o LinguisticVariable.o `test -f 'linguistic_variables/LinguisticVariable.cpp' || echo '$(srcdir)/'`linguistic_variables/LinguisticVariable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinguisticVariable.Tpo $(DEPDIR)/LinguisticVariable.Po
#	$(AM_V_CXX)source='linguistic_variables/LinguisticVariable.cpp' object='LinguisticVariable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinguisticVariable.o `test -f 'linguistic_variables/LinguisticVariable.cpp' || echo '$(srcdir)/'`linguistic_variables/LinguisticVariable.cpp

LinguisticVariable.obj: linguistic_variables/LinguisticVariable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinguisticVariable.obj -MD -MP -MF $(DEPDIR)/LinguisticVariable.Tpo -c -o LinguisticVariable.obj `if test -f 'linguistic_variables/LinguisticVariable.cpp'; then $(CYGPATH_W) 'linguistic_variables/LinguisticVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/linguistic_variables/LinguisticVariable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinguisticVariable.Tpo $(DEPDIR)/LinguisticVariable.Po
#	$(AM_V_CXX)source='linguistic_variables/LinguisticVariable.cpp' object='LinguisticVariable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinguisticVariable.obj `if test -f 'linguistic_variables/LinguisticVariable.cpp'; then $(CYGPATH_W) 'linguistic_variables/LinguisticVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/linguistic_variables/LinguisticVariable.cpp'; fi`

MamdaniOutputVariable.o: linguistic_variables/MamdaniOutputVariable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MamdaniOutputVariable.o -MD -MP -MF $(DEPDIR)/MamdaniOutputVariable.Tpo -c -o MamdaniOutputVariable.o `test -f 'linguistic_variables/MamdaniOutputVariable.cpp' || echo '$(srcdir)/'`linguistic_variables/MamdaniOutputVariable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MamdaniOutputVariable.Tpo $(DEPDIR)/MamdaniOutputVariable.Po
#	$(AM_V_CXX)source='linguistic_variables/MamdaniOutputVariable.cpp' object='MamdaniOutputVariable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MamdaniOutputVariable.o `test -f 'linguistic_variables/MamdaniOutputVariable.cpp' || echo '$(srcdir)/'`linguistic_variables/MamdaniOutputVariable.cpp

MamdaniOutputVariable.obj: linguistic_variables/MamdaniOutputVariable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MamdaniOutputVariable.obj -MD -MP -MF $(DEPDIR)/MamdaniOutputVariable.Tpo -c -o MamdaniOutputVariable.obj `if test -f 'linguistic_variables/MamdaniOutputVariable.cpp'; then $(CYGPATH_W) 'linguistic_variables/MamdaniOutputVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/linguistic_variables/MamdaniOutputVariable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MamdaniOutputVariable.Tpo $(DEPDIR)/MamdaniOutputVariable.Po
#	$(AM_V_CXX)source='linguistic_variables/MamdaniOutputVariable.cpp' object='MamdaniOutputVariable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MamdaniOutputVariable.obj `if test -f 'linguistic_variables/MamdaniOutputVariable.cpp'; then $(CYGPATH_W) 'linguistic_variables/MamdaniOutputVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/linguistic_variables/MamdaniOutputVariable.cpp'; fi`

ZadehianAnd.o: operator/ZadehianAnd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZadehianAnd.o -MD -MP -MF $(DEPDIR)/ZadehianAnd.Tpo -c -o ZadehianAnd.o `test -f 'operator/ZadehianAnd.cpp' || echo '$(srcdir)/'`operator/ZadehianAnd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ZadehianAnd.Tpo $(DEPDIR)/ZadehianAnd.Po
#	$(AM_V_CXX)source='operator/ZadehianAnd.cpp' object='ZadehianAnd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZadehianAnd.o `test -f 'operator/ZadehianAnd.cpp' || echo '$(srcdir)/'`operator/ZadehianAnd.cpp

ZadehianAnd.obj: operator/ZadehianAnd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZadehianAnd.obj -MD -MP -MF $(DEPDIR)/ZadehianAnd.Tpo -c -o ZadehianAnd.obj `if test -f 'operator/ZadehianAnd.cpp'; then $(CYGPATH_W) 'operator/ZadehianAnd.cpp'; else $(CYGPATH_W) '$(srcdir)/operator/ZadehianAnd.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ZadehianAnd.Tpo $(DEPDIR)/ZadehianAnd.Po
#	$(AM_V_CXX)source='operator/ZadehianAnd.cpp' object='ZadehianAnd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZadehianAnd.obj `if test -f 'operator/ZadehianAnd.cpp'; then $(CYGPATH_W) 'operator/ZadehianAnd.cpp'; else $(CYGPATH_W) '$(srcdir)/operator/ZadehianAnd.cpp'; fi`

ZadehianOr.o: operator/ZadehianOr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZadehianOr.o -MD -MP -MF $(DEPDIR)/ZadehianOr.Tpo -c -o ZadehianOr.o `test -f 'operator/ZadehianOr.cpp' || echo '$(srcdir)/'`operator/ZadehianOr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ZadehianOr.Tpo $(DEPDIR)/ZadehianOr.Po
#	$(AM_V_CXX)source='operator/ZadehianOr.cpp' object='ZadehianOr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZadehianOr.o `test -f 'operator/ZadehianOr.cpp' || echo '$(srcdir)/'`operator/ZadehianOr.cpp

ZadehianOr.obj: operator/ZadehianOr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZadehianOr.obj -MD -MP -MF $(DEPDIR)/ZadehianOr.Tpo -c -o ZadehianOr.obj `if test -f 'operator/ZadehianOr.cpp'; then $(CYGPATH_W) 'operator/ZadehianOr.cpp'; else $(CYGPATH_W) '$(srcdir)/operator/ZadehianOr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ZadehianOr.Tpo $(DEPDIR)/ZadehianOr.Po
#	$(AM_V_CXX)source='operator/ZadehianOr.cpp' object='ZadehianOr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZadehianOr.obj `if test -f 'operator/ZadehianOr.cpp'; then $(CYGPATH_W) 'operator/ZadehianOr.cpp'; else $(CYGPATH_W) '$(srcdir)/operator/ZadehianOr.cpp'; fi`

PolygonalShape.o: shape/PolygonalShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PolygonalShape.o -MD -MP -MF $(DEPDIR)/PolygonalShape.Tpo -c -o PolygonalShape.o `test -f 'shape/PolygonalShape.cpp' || echo '$(srcdir)/'`shape/PolygonalShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PolygonalShape.Tpo $(DEPDIR)/PolygonalShape.Po
#	$(AM_V_CXX)source='shape/PolygonalShape.cpp' object='PolygonalShape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PolygonalShape.o `test -f 'shape/PolygonalShape.cpp' || echo '$(srcdir)/'`shape/PolygonalShape.cpp

PolygonalShape.obj: shape/PolygonalShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PolygonalShape.obj -MD -MP -MF $(DEPDIR)/PolygonalShape.Tpo -c -o PolygonalShape.obj `if test -f 'shape/PolygonalShape.cpp'; then $(CYGPATH_W) 'shape/PolygonalShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/PolygonalShape.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/PolygonalShape.Tpo $(DEPDIR)/PolygonalShape.Po
#	$(AM_V_CXX)source='shape/PolygonalShape.cpp' object='PolygonalShape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PolygonalShape.obj `if test -f 'shape/PolygonalShape.cpp'; then $(CYGPATH_W) 'shape/PolygonalShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/PolygonalShape.cpp'; fi`

RectangularShape.o: shape/RectangularShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RectangularShape.o -MD -MP -MF $(DEPDIR)/RectangularShape.Tpo -c -o RectangularShape.o `test -f 'shape/RectangularShape.cpp' || echo '$(srcdir)/'`shape/RectangularShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RectangularShape.Tpo $(DEPDIR)/RectangularShape.Po
#	$(AM_V_CXX)source='shape/RectangularShape.cpp' object='RectangularShape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RectangularShape.o `test -f 'shape/RectangularShape.cpp' || echo '$(srcdir)/'`shape/RectangularShape.cpp

RectangularShape.obj: shape/RectangularShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RectangularShape.obj -MD -MP -MF $(DEPDIR)/RectangularShape.Tpo -c -o RectangularShape.obj `if test -f 'shape/RectangularShape.cpp'; then $(CYGPATH_W) 'shape/RectangularShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/RectangularShape.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/RectangularShape.Tpo $(DEPDIR)/RectangularShape.Po
#	$(AM_V_CXX)source='shape/RectangularShape.cpp' object='RectangularShape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RectangularShape.obj `if test -f 'shape/RectangularShape.cpp'; then $(CYGPATH_W) 'shape/RectangularShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/RectangularShape.cpp'; fi`

TrapezoidalShape.o: shape/TrapezoidalShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TrapezoidalShape.o -MD -MP -MF $(DEPDIR)/TrapezoidalShape.Tpo -c -o TrapezoidalShape.o `test -f 'shape/TrapezoidalShape.cpp' || echo '$(srcdir)/'`shape/TrapezoidalShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TrapezoidalShape.Tpo $(DEPDIR)/TrapezoidalShape.Po
#	$(AM_V_CXX)source='shape/TrapezoidalShape.cpp' object='TrapezoidalShape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrapezoidalShape.o `test -f 'shape/TrapezoidalShape.cpp' || echo '$(srcdir)/'`shape/TrapezoidalShape.cpp

TrapezoidalShape.obj: shape/TrapezoidalShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TrapezoidalShape.obj -MD -MP -MF $(DEPDIR)/TrapezoidalShape.Tpo -c -o TrapezoidalShape.obj `if test -f 'shape/TrapezoidalShape.cpp'; then $(CYGPATH_W) 'shape/TrapezoidalShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/TrapezoidalShape.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TrapezoidalShape.Tpo $(DEPDIR)/TrapezoidalShape.Po
#	$(AM_V_CXX)source='shape/TrapezoidalShape.cpp' object='TrapezoidalShape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrapezoidalShape.obj `if test -f 'shape/TrapezoidalShape.cpp'; then $(CYGPATH_W) 'shape/TrapezoidalShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/TrapezoidalShape.cpp'; fi`

TriangularShape.o: shape/TriangularShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TriangularShape.o -MD -MP -MF $(DEPDIR)/TriangularShape.Tpo -c -o TriangularShape.o `test -f 'shape/TriangularShape.cpp' || echo '$(srcdir)/'`shape/TriangularShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TriangularShape.Tpo $(DEPDIR)/TriangularShape.Po
#	$(AM_V_CXX)source='shape/TriangularShape.cpp' object='TriangularShape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TriangularShape.o `test -f 'shape/TriangularShape.cpp' || echo '$(srcdir)/'`shape/TriangularShape.cpp

TriangularShape.obj: shape/TriangularShape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TriangularShape.obj -MD -MP -MF $(DEPDIR)/TriangularShape.Tpo -c -o TriangularShape.obj `if test -f 'shape/TriangularShape.cpp'; then $(CYGPATH_W) 'shape/TriangularShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/TriangularShape.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TriangularShape.Tpo $(DEPDIR)/TriangularShape.Po
#	$(AM_V_CXX)source='shape/TriangularShape.cpp' object='TriangularShape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TriangularShape.obj `if test -f 'shape/TriangularShape.cpp'; then $(CYGPATH_W) 'shape/TriangularShape.cpp'; else $(CYGPATH_W) '$(srcdir)/shape/TriangularShape.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(top_builddir)/bin/$(am__dirstamp)" || rm -f $(top_builddir)/bin/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic cscopelist ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
